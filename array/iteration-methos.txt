Array forEach
Array map()
Array flatMap()
Array filter()
Array reduce()
Array reduceRight()
Array every()
Array some()
Array from()
Array keys()
Array entries()
Array with() ES 2023

1. Array forEach()
   - Thực hiện một hàm callback cho mỗi phần tử trong mảng.
     ```javascript
     let arr = [1, 2, 3];
     arr.forEach(item => console.log(item));
     // Output: 1, 2, 3
     ```

2. Array map()
   - Tạo một mảng mới với kết quả của việc áp dụng một hàm callback cho từng phần tử trong mảng.
     ```javascript
     let arr = [1, 2, 3];
     let doubled = arr.map(item => item * 2);
     // doubled: [2, 4, 6]
     ```

3. Array flatMap()
   - Tương tự như `map()`, nhưng sau đó làm phẳng mảng kết quả.
     ```javascript
     let arr = [1, 2, 3];
     let flatMapped = arr.flatMap(item => [item, item * 2]);
     // flatMapped: [1, 2, 2, 4, 3, 6]
     ```

4. Array filter()
   - Tạo một mảng mới với các phần tử thỏa mãn điều kiện của một hàm callback.
     ```javascript
     let arr = [1, 2, 3, 4, 5];
     let evenNumbers = arr.filter(item => item % 2 === 0);
     // evenNumbers: [2, 4]
     ```

5. Array reduce()
   - Tổng hợp các phần tử của mảng thành một giá trị duy nhất bằng cách sử dụng một hàm callback.
     ```javascript
     let arr = [1, 2, 3, 4];
     let sum = arr.reduce((accumulator, currentValue) => accumulator + currentValue, 0);
     // sum: 10
     ```

6. Array reduceRight()
   - Tương tự như `reduce()`, nhưng bắt đầu từ phần tử cuối cùng của mảng.
     ```javascript
     let arr = [1, 2, 3, 4];
     let sumRight = arr.reduceRight((accumulator, currentValue) => accumulator + currentValue, 0);
     // sumRight: 10
     ```

7. Array every()
   - Kiểm tra xem tất cả các phần tử có thỏa mãn điều kiện của một hàm callback hay không.
     ```javascript
     let arr = [2, 4, 6];
     let allEven = arr.every(item => item % 2 === 0);
     // allEven: true
     ```

8. Array some()
   - Kiểm tra xem ít nhất một phần tử có thỏa mãn điều kiện của một hàm callback hay không.
     ```javascript
     let arr = [1, 2, 3];
     let hasEven = arr.some(item => item % 2 === 0);
     // hasEven: true
     ```

9. Array from()
   - Tạo một mảng từ một đối tượng có thể lặp qua hoặc một dãy số.
     ```javascript
     let arrayFromIterable = Array.from('hello');
     // arrayFromIterable: ['h', 'e', 'l', 'l', 'o']
     ```

10. Array keys()
   - Trả về một đối tượng Iterator của các chỉ mục của mảng.
     ```javascript
     let arr = ['a', 'b', 'c'];
     let iterator = arr.keys();
     for (let key of iterator) {
       console.log(key);
     }
     // Output: 0, 1, 2
     ```

11. Array entries()
   - Trả về một đối tượng Iterator của cặp giá trị `[index, value]` cho mỗi phần tử trong mảng.
     ```javascript
     let arr = ['a', 'b', 'c'];
     let iterator = arr.entries();
     for (let entry of iterator) {
       console.log(entry);
     }
     // Output: [0, 'a'], [1, 'b'], [2, 'c']
     ```

12. Array with()
   - hương thức an toàn 
   để cập nhật các phần tử trong một mảng mà không làm thay đổi mảng ban đầu.
    const months = ["Januar", "Februar", "Mar", "April"];
    const myMonths = months.with(2, "March");

    Output: Januar,Februar,March,April
